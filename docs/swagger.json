{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample Hugeman Assignment backend using Go and Swagger. The project serves as a backend API for managing tasks and users.",
        "title": "Tech Exam Hugeman Assignment API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/v1/health": {
            "get": {
                "description": "Returns status of the service",
                "tags": [
                    "Health Check"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "Health check successful",
                        "schema": {
                            "$ref": "#/definitions/entities.GetHealthUserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleInternalError"
                        }
                    }
                }
            }
        },
        "/api/v1/tasks": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all tasks with optional search, sort, and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get All Tasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search by title or description",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field: title, created_at, status",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order: asc or desc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default 20)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tasks retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/entities.GetAllTasksResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid query params",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleInvalidRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleUnauthorized"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleInternalError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new task",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Create Task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date (RFC3339 format)",
                        "name": "date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Optional base64 image upload",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.CreateTaskResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleInvalidRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleUnauthorized"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleTaskNotFound"
                        }
                    },
                    "409": {
                        "description": "Task already exists",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleTaskAlreadyExists"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleInternalError"
                        }
                    }
                }
            }
        },
        "/api/v1/tasks/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a task by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get Task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.GetTaskResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleUnauthorized"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleTaskNotFound"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleInternalError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a task by ID",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Update Task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Title",
                        "name": "title",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Image",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task updated successfully",
                        "schema": {
                            "$ref": "#/definitions/entities.UpdateTaskResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleInvalidRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleUnauthorized"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleTaskNotFound"
                        }
                    },
                    "409": {
                        "description": "Task already exists",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleTaskAlreadyExists"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleInternalError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a task by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete Task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleUnauthorized"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleTaskNotFound"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleInternalError"
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "post": {
                "description": "Register a new user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Register request",
                        "name": "registerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully registered user",
                        "schema": {
                            "$ref": "#/definitions/entities.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleInvalidRequest"
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleUserExists"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleInternalError"
                        }
                    }
                }
            }
        },
        "/api/v1/users/login": {
            "post": {
                "description": "Login a user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged in user",
                        "schema": {
                            "$ref": "#/definitions/entities.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleInvalidRequest"
                        }
                    },
                    "401": {
                        "description": "Password is incorrect",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleIncorrectPassword"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleUserNotFound"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/entities.ErrExampleInternalError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.CreateTaskResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-09-01T00:00:00Z"
                },
                "date": {
                    "type": "string",
                    "example": "2021-09-01T00:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Description of task 1"
                },
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "image": {
                    "type": "string",
                    "example": "fqfqf"
                },
                "status": {
                    "type": "string",
                    "example": "IN_PROGRESS"
                },
                "title": {
                    "type": "string",
                    "example": "Task 1"
                },
                "user_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                }
            }
        },
        "entities.ErrExampleIncorrectPassword": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 4002
                },
                "message": {
                    "type": "string",
                    "example": "password is incorrect"
                }
            }
        },
        "entities.ErrExampleInternalError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 5000
                },
                "message": {
                    "type": "string",
                    "example": "internal server error"
                }
            }
        },
        "entities.ErrExampleInvalidRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 2001
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.FieldError"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "invalid request body"
                }
            }
        },
        "entities.ErrExampleTaskAlreadyExists": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 3002
                },
                "message": {
                    "type": "string",
                    "example": "task already exists"
                }
            }
        },
        "entities.ErrExampleTaskNotFound": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 3001
                },
                "message": {
                    "type": "string",
                    "example": "task not found"
                }
            }
        },
        "entities.ErrExampleUnauthorized": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 1001
                },
                "message": {
                    "type": "string",
                    "example": "unauthorized"
                }
            }
        },
        "entities.ErrExampleUserExists": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 4003
                },
                "message": {
                    "type": "string",
                    "example": "user already exists"
                }
            }
        },
        "entities.ErrExampleUserNotFound": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 4001
                },
                "message": {
                    "type": "string",
                    "example": "user not found"
                }
            }
        },
        "entities.FieldError": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string",
                    "example": "title"
                },
                "message": {
                    "type": "string",
                    "example": "Title is required"
                }
            }
        },
        "entities.GetAllTasksResponse": {
            "type": "object",
            "properties": {
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.GetTaskResponse"
                    }
                },
                "total": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "entities.GetHealthUserResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "Healthy"
                }
            }
        },
        "entities.GetTaskResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-09-01T00:00:00Z"
                },
                "date": {
                    "type": "string",
                    "example": "2021-09-01T00:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Description of task 1"
                },
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "image": {
                    "type": "string",
                    "example": "fqfqf"
                },
                "status": {
                    "type": "string",
                    "example": "IN_PROGRESS"
                },
                "title": {
                    "type": "string",
                    "example": "Task 1"
                },
                "user_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                }
            }
        },
        "entities.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "password123"
                }
            }
        },
        "entities.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                }
            }
        },
        "entities.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "password123"
                }
            }
        },
        "entities.RegisterResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "hash_password": {
                    "type": "string",
                    "example": "password123"
                },
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                }
            }
        },
        "entities.UpdateTaskResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-09-01T00:00:00Z"
                },
                "date": {
                    "type": "string",
                    "example": "2021-09-01T00:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Description of task 1"
                },
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "image": {
                    "type": "string",
                    "example": "fqfqf"
                },
                "status": {
                    "type": "string",
                    "example": "IN_PROGRESS"
                },
                "title": {
                    "type": "string",
                    "example": "Task 1"
                },
                "user_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        },
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}